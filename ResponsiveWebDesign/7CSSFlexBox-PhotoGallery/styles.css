* {
    box-sizing: border-box;
  }
  
  body {
    margin: 0;
    font-family: sans-serif;
    background: #f5f6f7;
  }
  
  .header {
    text-align: center;
    text-transform: uppercase;
    padding: 32px;
    background-color: #0a0a23;
    color: #fff;
    border-bottom: 4px solid #fdb347;
  }
  
  .gallery {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    gap: 16px;
    max-width: 1400px;
    margin: 0 auto;
    padding: 20px 10px;
  }
  
  .gallery img {
    width: 100%;
    max-width: 350px;
    height: 300px;
    object-fit: cover;
    border-radius: 10px;
  }
  
  .gallery::after {
    content: "";
    width: 350px;
  }
  
  /*** Flexbox helps you design your webpage so that it looks good on any screen size. Flexbox is a one-dimensional CSS 
layout that can control the way items are spaced out and aligned within a container. To use it, give an element a 
display property of flex. This will make the element a flex container. Any direct children of a flex container are 
called flex items. Flexbox has a main and cross axis. The main axis is defined by the flex-direction property, which has 
four possible values:
=> row (default): horizontal axis with flex items from left to right
=> row-reverse: horizontal axis with flex items from right to left
=> column: vertical axis with flex items from top to bottom
=> column-reverse: vertical axis with flex items from bottom to top

The flex-wrap property determines how your flex items behave when the flex container is too small. Setting it to wrap will 
allow the items to wrap to the next row or column. nowrap (default) will prevent your items from wrapping and shrink them 
if needed.**/