@media (prefers-reduced-motion: no-preference) {
    * {
      scroll-behavior: smooth;
    }
  }
  
  body {
    background: #f5f6f7;
    color: #1b1b32;
    font-family: Helvetica;
    margin: 0;
  }
  
  header {
    width: 100%;
    height: 50px;
    background-color: #1b1b32;
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: fixed;
    top: 0;
  }
  
  #logo {
    width: max(100px, 18vw);
    background-color: #0a0a23;
    aspect-ratio: 35 / 4;
    padding: 0.4rem;
  }
  
  h1 {
    color: #f1be32;
    font-size: min(5vw, 1.2em);
    text-align: center;
  }
  
  nav {
    width: 50%;
    max-width: 300px;
    height: 50px;
  }
  
  nav > ul {
    display: flex;
    justify-content: space-evenly;
    flex-wrap: wrap;
    align-items: center;
    padding-inline-start: 0;
    margin-block: 0;
    height: 100%;
  }
  
  nav > ul > li {
    color: #dfdfe2;
    margin: 0 0.2rem;
    padding: 0.2rem;
    display: block;
  }
  
  nav > ul > li:hover {
    background-color: #dfdfe2;
    color: #1b1b32;
    cursor: pointer;
  }
  
  li > a {
    color: inherit;
    text-decoration: none;
  }
  
  main {
    padding-top: 50px;
  }
  
  section {
    width: 80%;
    margin: 0 auto 10px auto;
    max-width: 600px;
  }
  
  h1,
  h2 {
    font-family: Verdana, Tahoma;
  }
  
  h2 {
    border-bottom: 4px solid #dfdfe2;
    margin-top: 0px;
    padding-top: 60px;
  }
  
  .info {
    padding: 10px 0 0 5px;
  }
  
  .formrow {
    margin-top: 30px;
    padding: 0px 15px;
  }
  
  input {
    font-size: 16px;
  }
  
  .info label, .info input {
    display: inline-block;
  }
  
  .info input {
    width: 50%;
    text-align: left;
  }
  
  .info label {
    width: 10%;
    min-width: 55px;
    text-align: right;
  }
  
  .question-block {
    text-align: left;
    display: block;
    width: 100%;
    margin-top: 20px;
    padding-top: 5px;
  }
  
  p {
    margin-top: 5px;
    padding-left: 15px;
    font-size: 20px;
  }
  
  p::before {
    content: "Question #";
  }
  
  .question {
    border: none;
    padding-bottom: 0;
  }
  
  .answers-list {
    list-style: none;
    padding: 0;
  }
  
  button {
    display: block;
    margin: 40px auto;
    width: 40%;
    padding: 15px;
    font-size: 23px;
    background: #d0d0d5;
    border: 3px solid #3b3b4f;
  }
  
  footer {
    background-color: #2a2a40;
    display: flex;
    justify-content: center;
  }
  
  footer,
  footer a {
    color: #dfdfe2;
  }
  
  address {
    text-align: center;
    padding: 0.3em;
  }
  
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  
  /**
Target unordered list elements within nav elements, and use Flexbox to evenly space the children.

nav > ul {
  display: flex;
  justify-content: space-evenly;
}

To increase the page accessibility, the role attribute can be used to indicate the purpose behind an element on the page 
to assistive technologies. The role attribute is a part of the Web Accessibility Initiative (WAI), and accepts preset 
values.

There is a common pattern to visually hide text for only screen readers to read.

This pattern is to set the following CSS properties:

position: absolute;
width: 1px;
height: 1px;
padding: 0;
margin: -1px;
overflow: hidden;
clip: rect(0, 0, 0, 0);
white-space: nowrap;
border: 0;

Tidy up the header, by using Flexbox to put space between the children, and vertically center them.

Then, fix the header to the top of the viewport.

header {
 
  justify-content: space-between;
  align-items: center;
  position: fixed;
  top: 0;
}

Set the footer background color to #2a2a40, and use Flexbox to horizontally center the text.

footer {
   background-color: #2a2a40;
   display: flex;
   justify-content: center;
 }

Certain types of motion-based animations can cause discomfort for some users. In particular, people with vestibular disorders have sensitivity to certain motion triggers.

The @media at-rule has a media feature called prefers-reduced-motion to set CSS based on the user's preferences. It can take one of the following values:

reduce
no-preference
@media (feature: value) {
  selector {
    styles
  }
}

Wrap the style rule that sets scroll-behavior: smooth within an @media at-rule with the media feature 
prefers-reduced-motion having no-preference set as the value.

@media (prefers-reduced-motion: no-preference) {
  * {
    scroll-behavior: smooth;
  }
}

The navigation accessibility can be improved by providing keyboard shortcuts.

The accesskey attribute accepts a space-separated list of access keys. For example:

<button type="submit" accesskey="s">Submit</button>

Note: It is not always advised to use access keys, but they can be useful
**/